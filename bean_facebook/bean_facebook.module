<?php

/**
 * @file
 * Facebook integration into beans.
 */

/**
 * Implements hook_bean_types_api_info().
 */
function bean_facebook_bean_types_api_info() {
  return array(
    'api' => bean_current_version(),
  );
}

/**
 * Implements hook_bean_types().
 */
function bean_facebook_bean_types() {
  $plugins = array();
  $plugin_path = drupal_get_path('module', 'bean_facebook') . '/plugins';

  $plugins['bean_facebook'] = array(
    'label' => t('Facebook Feed'),
    'handler' => array(
      'class' => 'FacebookBean',
      'parent' => 'bean',
    ),
    'path' => $plugin_path,
    'file' => 'FacebookBean.class.php',
    'editable' => TRUE,
  );

  return $plugins;
}

/**
 * Implements hook_siteconfig().
 */
function bean_facebook_siteconfig($op, $form) {
  if ($op == 'form') {
    $api_key = variable_get('facebook_api_key', '');
    $form['services']['facebook_api_key'] = array(
      '#title' => t('Facebook API Key'),
      '#type' => 'textfield',
      '#default_value' => $api_key,
      '#description' => 'API key for Facebook services',
    );

    return $form;
  }
}

/**
 * Implements hook_preprocess_html().
 *
 * Include necessary markup for facebook.
 */
function bean_facebook_preprocess_html(&$variables) {
  if (variable_get('facebook_code', FALSE)) {
    $api_key = variable_get('facebook_api_key', '');

    $body = <<<EOD
<div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=$api_key";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>
EOD;
    $variables['page']['page_top'][] = array(
      '#markup' => $body,
    );

    drupal_add_js(drupal_get_path('module', 'bean_facebook') . '/js/drupal.bean-facebook.js');
  }
}

/**
 * AJAX callback for adding multiple pages.
 */
function bean_facebook_ajax_callback($form, $form_state) {
  // If bean is being loaded via tiles.module, then need to return form from
  // bean_form key.
  return isset($form['urls']) ? $form['url'] : $form['bean_form']['urls'];
}

/**
 * Select form for selecting multiple feeds.
 */
function bean_facebook_select_form($form, $form_state, $bean) {
  if (count($bean->urls) > 1) {
    $form['#bean'] = $bean;

    $options = array();
    foreach ($bean->urls as $url) {
      $options[$url['url']] = $url['title'];
    }

    $form['url'] = array(
      '#type' => 'select',
      '#options' => $options,
      '#ajax' => array(
        'callback' => 'bean_facebook_select_callback',
        'wrapper' => 'facebook-bean-wrapper-' . $bean->delta,
      ),
    );
  }

  return $form;
}

/**
 * AJAX callback for feed select form.
 */
function bean_facebook_select_callback($form, $form_state) {
  $commands = array();

  $commands[] = ajax_command_replace('#facebook-bean-wrapper-' . $form['#bean']->delta, drupal_render(FacebookBean::getLikeBox($form_state['values']['url'], $form['#bean'])));

  $commands[] = array('command' => 'bean_facebook_update');

  return array(
    '#type' => 'ajax',
    '#commands' => $commands,
  );
}
